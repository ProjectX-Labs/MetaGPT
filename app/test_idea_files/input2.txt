I want to build an application that lets a user have a chat with an ai agent, then sit back while ai agents generate code for, how would that be able to be built? It will involve indexing any specific repo before they are able to act on it. And the agents will need to be able to generate code in a sandboxed environment.

 I want the backend to be built with fastapi, motor, mongodb, langchain, and openai (gpt4)

Here's a high level of how it works for you: You login with your github, then on the dashboard you can select a repo to start working on or create a new one - then you start a new development cycle on the selected codebase (I'm not sure exactly what to create on the dashboard, a sidebar with the repos and on the right show the code to clone the repo and see the last cycle branches and commits pushed by ProjectX).
The first real step is you then consult with an ai in an ai agent chat window that will ask you all the right questions about what you want to build or do - the ai chat will
    
    also be capable of generating easy button suggestions in the chat to give the user options to pick from when relevant, [also make one of these buttons an option to just use the AI's recommendation". Then the ai will start planning how to build/do what you've described (through creating real documents for itself), then when you approve of the planning, the ai will get to work coding on the codebase. It will initiate a backend development ai agent cycle that pushes updates and progress to the user. Then when the agents are done with the work, they will push their code into an appropriately named branch for the prototype they just build. Then the user will simply review the tasks and work that was done and give their revision feedback - this will be stored, and then the cycle is completed and the user can start another cycle (and also choose to include the revision feedback), iterate using the revision feedback or deploy their app.
